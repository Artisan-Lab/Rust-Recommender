File {
    shebang: None,
    attrs: [],
    items: [
        Struct(
            ItemStruct {
                attrs: [],
                vis: Inherited,
                struct_token: Struct,
                ident: Ident {
                    sym: A,
                    span: bytes(8..9),
                },
                generics: Generics {
                    lt_token: None,
                    params: [],
                    gt_token: None,
                    where_clause: None,
                },
                fields: Unit,
                semi_token: Some(
                    Semi,
                ),
            },
        ),
        Impl(
            ItemImpl {
                attrs: [],
                defaultness: None,
                unsafety: None,
                impl_token: Impl,
                generics: Generics {
                    lt_token: None,
                    params: [],
                    gt_token: None,
                    where_clause: None,
                },
                trait_: None,
                self_ty: Path(
                    TypePath {
                        qself: None,
                        path: Path {
                            leading_colon: None,
                            segments: [
                                PathSegment {
                                    ident: Ident {
                                        sym: A,
                                        span: bytes(17..18),
                                    },
                                    arguments: None,
                                },
                            ],
                        },
                    },
                ),
                brace_token: Brace,
                items: [
                    Method(
                        ImplItemMethod {
                            attrs: [],
                            vis: Public(
                                VisPublic {
                                    pub_token: Pub,
                                },
                            ),
                            defaultness: None,
                            sig: Signature {
                                constness: None,
                                asyncness: None,
                                unsafety: None,
                                abi: None,
                                fn_token: Fn,
                                ident: Ident {
                                    sym: func,
                                    span: bytes(31..35),
                                },
                                generics: Generics {
                                    lt_token: None,
                                    params: [],
                                    gt_token: None,
                                    where_clause: None,
                                },
                                paren_token: Paren,
                                inputs: [
                                    Receiver(
                                        Receiver {
                                            attrs: [],
                                            reference: Some(
                                                (
                                                    And,
                                                    None,
                                                ),
                                            ),
                                            mutability: Some(
                                                Mut,
                                            ),
                                            self_token: SelfValue,
                                        },
                                    ),
                                ],
                                variadic: None,
                                output: Default,
                            },
                            block: Block {
                                brace_token: Brace,
                                stmts: [],
                            },
                        },
                    ),
                ],
            },
        ),
        Fn(
            ItemFn {
                attrs: [],
                vis: Inherited,
                sig: Signature {
                    constness: None,
                    asyncness: None,
                    unsafety: None,
                    abi: None,
                    fn_token: Fn,
                    ident: Ident {
                        sym: main,
                        span: bytes(60..64),
                    },
                    generics: Generics {
                        lt_token: None,
                        params: [],
                        gt_token: None,
                        where_clause: None,
                    },
                    paren_token: Paren,
                    inputs: [],
                    variadic: None,
                    output: Default,
                },
                block: Block {
                    brace_token: Brace,
                    stmts: [
                        Local(
                            Local {
                                attrs: [],
                                let_token: Let,
                                pat: Ident(
                                    PatIdent {
                                        attrs: [],
                                        by_ref: None,
                                        mutability: Some(
                                            Mut,
                                        ),
                                        ident: Ident {
                                            sym: a,
                                            span: bytes(80..81),
                                        },
                                        subpat: None,
                                    },
                                ),
                                init: Some(
                                    (
                                        Eq,
                                        Struct(
                                            ExprStruct {
                                                attrs: [],
                                                path: Path {
                                                    leading_colon: None,
                                                    segments: [
                                                        PathSegment {
                                                            ident: Ident {
                                                                sym: A,
                                                                span: bytes(84..85),
                                                            },
                                                            arguments: None,
                                                        },
                                                    ],
                                                },
                                                brace_token: Brace,
                                                fields: [],
                                                dot2_token: None,
                                                rest: None,
                                            },
                                        ),
                                    ),
                                ),
                                semi_token: Semi,
                            },
                        ),
                        Semi(
                            MethodCall(
                                ExprMethodCall {
                                    attrs: [],
                                    receiver: Path(
                                        ExprPath {
                                            attrs: [],
                                            qself: None,
                                            path: Path {
                                                leading_colon: None,
                                                segments: [
                                                    PathSegment {
                                                        ident: Ident {
                                                            sym: a,
                                                            span: bytes(93..94),
                                                        },
                                                        arguments: None,
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                    dot_token: Dot,
                                    method: Ident {
                                        sym: func,
                                        span: bytes(95..99),
                                    },
                                    turbofish: None,
                                    paren_token: Paren,
                                    args: [],
                                },
                            ),
                            Semi,
                        ),
                        Semi(
                            Path(
                                ExprPath {
                                    attrs: [],
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident {
                                                    sym: a,
                                                    span: bytes(107..108),
                                                },
                                                arguments: None,
                                            },
                                        ],
                                    },
                                },
                            ),
                            Semi,
                        ),
                    ],
                },
            },
        ),
    ],
}